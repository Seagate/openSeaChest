task:
  name: FreeBSD
  env:
    GITHUB_TOKEN: ENCRYPTED[!0b1ba5571657559b906aec90e82e3b4b1f0f9f13bacce4c3891ba8ebf90fa23160a51876ade5b3703d7861a3b8ea99b4!]
  freebsd_instance:
    matrix:
      image_family: freebsd-14-0
      image_family: freebsd-13-2
  install_script: pkg install -y git meson
  submodules_script: git submodule update --init --recursive --progress
  release_script: |
    branchName=$(printf '%s' "$CIRRUS_BRANCH" | tr '/' '-')
    if [ "$CIRRUS_RELEASE" != "" ]; then
      branchName=$(printf '%s' "$CIRRUS_RELEASE" | tr '/' '-')
    elif [ "$CIRRUS_TAG" != "" ]; then
      branchName=$(printf '%s' "$CIRRUS_TAG" | tr '/' '-')
    fi
    meson setup build -Dprefix=$CIRRUS_WORKING_DIR/output -Dmandir=$CIRRUS_WORKING_DIR/output/man -Dbindir=$CIRRUS_WORKING_DIR/output --buildtype=release
    meson install -C build
    cd $CIRRUS_WORKING_DIR/output
    tar cvfJ $CIRRUS_WORKING_DIR/"openSeaChest-$branchName-$(uname -s)-$(uname -r)-$(uname -m).tar.xz" *
    $CIRRUS_WORKING_DIR/cirrus_ci_post_freebsd_release.sh
  binaries_artifacts:
    path: openSeaChest-*.tar.xz
    

task:
  name: windowsservercore:visualstudio2019
  windows_container:
    image: cirrusci/windowsservercore:visualstudio2019
  env:
    CIRRUS_SHELL: powershell

    # Path to the solution file relative to the root of the project.
    SOLUTION_FILE_PATH: "Make/VS.2019"

    # Configuration type to build.
    # You can convert this to a build matrix if you need coverage of multiple configuration types.
    # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    BUILD_CONFIGURATION: "Release"

    matrix:
      - PLATFORM: "x86"
      - PLATFORM: "x64"
  submodules_script: git submodule update --init --recursive --progress
  build_script: |
    $vsWhere = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
    echo "vswhere: $vsWhere"
    $msBuild = & $vswhere -products * -latest -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe | select-object -first 1
    echo "msbuild: $msBuild"
    echo "$msBuild /m /p:Configuration=${env:BUILD_CONFIGURATION} ${env:SOLUTION_FILE_PATH} /p:Platform=${env:PLATFORM}"
    & $msBuild /m /p:Configuration=${env:BUILD_CONFIGURATION} ${env:SOLUTION_FILE_PATH} /p:Platform=${env:PLATFORM}
